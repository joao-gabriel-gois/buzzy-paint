version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
    ports:
      - "3211:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - './src/shared/infra/postgres/initdb:/docker-entrypoint-initdb.d'

  deno_app:
    build:
      context: .
      args:
        PGUSER: ${PGUSER}
        PGPASSWORD: ${PGPASSWORD}
        PGHOST: ${PGHOST}
        PGPORT: ${PGPORT}
        PGDATABASE: ${PGDATABASE}
        PORT: ${PORT}
    container_name: deno_app
    restart: unless-stopped
    ports:
      - "3333:3333"
    env_file:
      - .env
    environment:
      PGUSER: ${PGUSER}
      PGPASSWORD: ${PGPASSWORD}
      PGHOST: ${PGHOST}
      PGPORT: ${PGPORT}
      PGDATABASE: ${PGDATABASE}
      PORT: ${PORT}
    depends_on:
      - postgres

volumes:
  postgres_data:


# version: '3.8'

# services:
#   postgres:
#     image: postgres:13
#     container_name: postgres
#     restart: unless-stopped
#     environment:
#       POSTGRES_USER: ${PGUSER}
#       POSTGRES_PASSWORD: ${PGPASSWORD}
#       POSTGRES_DB: ${PGDATABASE}
#     ports:
#       - "3211:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#       - './src/shared/infra/postgres/initdb:/docker-entrypoint-initdb.d'

#   deno_app:
#     build:
#       context: .
#       args:
#         PGUSER: ${PGUSER}
#         PGPASSWORD: ${PGPASSWORD}
#         PGHOST: ${PGHOST}
#         PGPORT: ${PGPORT}
#         PGDATABASE: ${PGDATABASE}
#         PORT: ${PORT}
#     container_name: deno_app
#     restart: unless-stopped
#     ports:
#       - "3333:3333"
#     env_file:
#       - .env
#     environment:
#       PGUSER: ${PGUSER}
#       PGPASSWORD: ${PGPASSWORD}
#       PGHOST: ${PGHOST}
#       PGPORT: ${PGPORT}
#       PGDATABASE: ${PGDATABASE}
#       PORT: ${PORT}
#     depends_on:
#       - postgres

# volumes:
#   postgres_data:
